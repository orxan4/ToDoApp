services:
  backend:
    build:
      context: ./BACK
      dockerfile: Dockerfile
    container_name: nestjs_todo_app
    restart: no
    ports:
      - "3000:3000"
    volumes:
      - ./BACK:/usr/src/app
      - /usr/src/app/node_modules
#    command: npm run start:dev
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://user:password@postgres:5432/db
      - JWT_SECRET_KEY=alnjdljnsldkjfnvlsdfubsun
    depends_on:
      - postgres

  frontend:
    build:
      context: ./FRONT
      dockerfile: Dockerfile
    container_name: angular_todo_app
    restart: no
    ports:
      - "4200:4200"
    volumes:
      - ./FRONT:/usr/src/app
      - /usr/src/app/node_modules
#    command: npm start
    environment:
      - NODE_ENV=development
    depends_on:
      - backend

  postgres:
    image: postgres:17.4
    container_name: postgres
    restart: no
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - "35000:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:9.1
    container_name: pgadmin4
    restart: no
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "5050:80"
    depends_on:
      - postgres

volumes:
  postgres_data:
